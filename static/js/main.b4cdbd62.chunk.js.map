{"version":3,"sources":["actions/index.js","reducers/tasks.js","reducers/visibilityFilter.js","reducers/index.js","components/layout/TopMenu.js","components/layout/SideMenu.js","components/layout/Layout.js","components/layout/MainContent.js","components/AddTask.js","components/SideLink.js","containers/FilterLink.js","components/FilterList.js","components/TaskItem.js","components/TaskList.js","containers/VisibleTodoList.js","components/App.js","index.js"],"names":["VisibilityFilters","nextTaskId","TASKS","userId","id","text","completed","tasks","state","action","type","filter","task","map","initialFilter","visibilityFilter","combineReducers","useStyles","makeStyles","theme","appBar","zIndex","drawer","title","flexGrow","TopMenu","classes","AppBar","position","className","Toolbar","Typography","variant","width","flexShrink","drawerPaper","drawerContainer","overflow","SideMenu","children","Drawer","paper","root","display","Layout","sideMenu","contentTop","contentBottom","CssBaseline","MainContent","toolbar","mixins","content","padding","spacing","fullWidth","connect","dispatch","addTask","useState","inputText","setInputText","inputElement","useRef","ListItem","component","onSubmit","e","preventDefault","current","focus","IconButton","edge","aria-label","color","fontSize","ICON_SIZE","TextField","ref","value","onChange","target","label","SideLink","active","icon","onClick","button","selected","ListItemIcon","ListItemText","FilterLink","ownProps","SHOW_ALL","SHOW_COMPLETED","SHOW_ACTIVE","FilterList","List","Inbox","Assignment","Done","TaskItem","onDeleteClick","handleClick","CheckBox","style","green","primary","ListItemSecondaryAction","Delete","TaskList","onTaskClick","onTaskDeleteClick","dense","key","getVisibleTaskList","toggleTask","removeTask","App","store","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4cdbd62.chunk.js","sourcesContent":["// ACTION TYPES\r\nexport const ADD_TASK = 'ADD_TASK';\r\nexport const REMOVE_TASK = 'REMOVE_TASK';\r\nexport const TOGGLE_TASK = 'TOGGLE_TASK';\r\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER'\r\n\r\n// OTHER CONSTANTS\r\nexport const VisibilityFilters = {\r\n  SHOW_ALL: 'SHOW_ALL',\r\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}\r\n\r\n// ACTION CREATORS\r\nlet nextTaskId = 99;\r\nexport const addTask = (text) => {\r\n  return { \r\n    type: ADD_TASK,\r\n    id: nextTaskId++,\r\n    text\r\n  }\r\n}\r\n\r\nexport const removeTask = (id) => {\r\n  return {\r\n    type: REMOVE_TASK,\r\n    id\r\n  }\r\n}\r\n\r\nexport const toggleTask = (id) => {\r\n  return { \r\n    type: TOGGLE_TASK,\r\n    id\r\n  }\r\n}\r\n\r\nexport const setVisibilityFilter = (filter) => {\r\n  return { \r\n    type: SET_VISIBILITY_FILTER,\r\n    filter\r\n  }\r\n}","import {\r\n  TOGGLE_TASK,\r\n  ADD_TASK,\r\n  REMOVE_TASK,\r\n} from '../actions';\r\n\r\nconst TASKS = [\r\n  {\r\n    userId: 1,\r\n    id: 1,\r\n    text: \"You can create new tasks in the creator above\",\r\n    completed: false\r\n  },\r\n  {\r\n    userId: 1,\r\n    id: 2,\r\n    text: \"Mark tasks as completed by clicking on the checkbox\",\r\n    completed: false\r\n  },\r\n  {\r\n    userId: 1,\r\n    id: 3,\r\n    text: \"Filter tasks in the sidebar on the left\",\r\n    completed: false\r\n  },\r\n  {\r\n    userId: 1,\r\n    id: 4,\r\n    text: \"Delete tasks by clicking on trash icon\",\r\n    completed: true\r\n  },\r\n]\r\n\r\nconst tasks = (state = TASKS, action) => {\r\n  switch (action.type) {\r\n    // Create a new task using the text from the action\r\n    case ADD_TASK:\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.id,\r\n          text: action.text,\r\n          completed: false,\r\n        },\r\n      ];\r\n\r\n    // Remove the task with the matching id\r\n    case REMOVE_TASK:\r\n      return state.filter(task => task.id !== action.id);\r\n\r\n    // Toggle completed state of the task with matching id\r\n    case TOGGLE_TASK:\r\n      return state.map((task) => {\r\n        if (task.id === action.id) {\r\n          return {\r\n            ...task,\r\n            completed: !task.completed,\r\n          };\r\n        }\r\n        return task;\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default tasks;","import { VisibilityFilters } from '../actions'\r\nimport {\r\n  SET_VISIBILITY_FILTER,\r\n} from '../actions';\r\n\r\nconst initialFilter = VisibilityFilters.SHOW_ALL;\r\n\r\nconst visibilityFilter = (state = initialFilter, action) => {\r\n  switch (action.type) {\r\n    case SET_VISIBILITY_FILTER:\r\n      return action.filter;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default visibilityFilter;","import { combineReducers } from 'redux';\r\nimport tasks from './tasks';\r\nimport visibilityFilter from './visibilityFilter';\r\n\r\n// Export combined reducers\r\nexport default combineReducers({\r\n  tasks,\r\n  visibilityFilter\r\n})\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function TopMenu() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}> \r\n      <Toolbar>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          Task Manager\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Drawer, Toolbar } from '@material-ui/core';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: 'auto',\r\n  },\r\n}));\r\n\r\nexport default function SideMenu({ children }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Drawer\r\n      className={classes.drawer}\r\n      variant=\"permanent\"\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n    >\r\n      <Toolbar />\r\n      <div className={classes.drawerContainer}>\r\n        {children}\r\n      </div>\r\n    </Drawer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport { MainContent, SideMenu, TopMenu } from './';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n}));\r\n\r\nexport default function Layout({ sideMenu, contentTop, contentBottom }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <TopMenu />\r\n      <SideMenu>{sideMenu}</SideMenu>\r\n      <MainContent>\r\n        {contentTop}\r\n        {contentBottom}\r\n      </MainContent>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  fullWidth: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nexport default function MainContent({ children }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <main className={classes.fullWidth}>\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.content}>{children}</div>\r\n    </main>\r\n  );\r\n}\r\n","import React, { useState, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ListItem, TextField, IconButton } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport { addTask } from '../actions';\r\nimport { ICON_SIZE } from './App';\r\n\r\n/**\r\n * Creates new task\r\n * \r\n * @param {Function} addTak Dispatches an action that creates a new task\r\n */\r\nconst AddTask = ({ addTask }) => {\r\n  const [inputText, setInputText] = useState('');\r\n  const inputElement = useRef();\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Dispatch action that adds new task\r\n    addTask(inputText);\r\n\r\n    // Reset input field and focus it\r\n    setInputText('');\r\n    inputElement.current.focus();\r\n  }\r\n\r\n  return (\r\n    <ListItem \r\n      component=\"form\"\r\n      onSubmit={onSubmit}\r\n    >\r\n      <IconButton \r\n        edge=\"start\" \r\n        aria-label=\"create new task\"\r\n        type=\"submit\"\r\n      >\r\n        <AddCircleIcon color=\"primary\" fontSize={ICON_SIZE} />\r\n      </IconButton>\r\n      <TextField\r\n        ref={inputElement}\r\n        value={inputText}\r\n        onChange={e => setInputText(e.target.value)}\r\n        id=\"outlined-basic\"\r\n        label=\"Task description\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n      />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addTask: (text) => dispatch(addTask(text))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddTask);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\n\r\n/**\r\n * Customizable link to be rendered inside the SideMenu\r\n *\r\n * @param {Boolean} active Link is currently selected \r\n * @param {String} children Text of the link\r\n * @param {Element} icon\r\n * @param {Function} onClick Handles clicking on the link \r\n */\r\nconst SideLink = ({ active, children, icon, onClick }) => (\r\n  <ListItem \r\n    button \r\n    selected={active} \r\n    onClick={onClick}\r\n  >\r\n    <ListItemIcon>{icon}</ListItemIcon>\r\n    <ListItemText>{children}</ListItemText>\r\n  </ListItem>\r\n);\r\nSideLink.propTypes = {\r\n  active: PropTypes.bool.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n  icon: PropTypes.element,\r\n  onClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SideLink;\r\n","import { connect } from 'react-redux';\r\nimport SideLink from '../components/SideLink';\r\nimport { setVisibilityFilter } from '../actions';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    active: ownProps.filter === state.visibilityFilter\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\r\n  }\r\n}\r\n\r\nconst FilterLink = connect(mapStateToProps, mapDispatchToProps)(SideLink);\r\n\r\nexport default FilterLink;\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport {\r\n  Inbox,\r\n  Assignment,\r\n  Done,\r\n} from '@material-ui/icons';\r\n\r\nimport FilterLink from '../containers/FilterLink';\r\nimport { VisibilityFilters } from '../actions';\r\nconst { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } = VisibilityFilters;\r\n\r\nconst FilterList = () => (\r\n  <List>\r\n    <FilterLink filter={SHOW_ALL} icon={<Inbox />}>\r\n      All\r\n    </FilterLink>\r\n    <FilterLink filter={SHOW_ACTIVE} icon={<Assignment />}>\r\n      Active\r\n    </FilterLink>\r\n    <FilterLink filter={SHOW_COMPLETED} icon={<Done />}>\r\n      Completed\r\n    </FilterLink>\r\n  </List>\r\n);\r\n\r\nexport default FilterList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n} from '@material-ui/core';\r\nimport {\r\n  CheckBox,\r\n  CheckBoxOutlineBlank as CheckBoxBlank,\r\n  Delete,\r\n} from '@material-ui/icons';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nimport { ICON_SIZE } from './App';\r\n\r\n/**\r\n * A single task item\r\n *\r\n * @param {Number} id task unique id\r\n * @param {String} text description of the task\r\n * @param {Boolean} completed Task is either completed or not\r\n * @param {Function} onClick Handles clicking on a task and on the checkbox icon\r\n * @param {Function} onDeleteClick Handles clicking on the trash icon\r\n */\r\nconst TaskItem = ({\r\n  text,\r\n  completed,\r\n  onClick,\r\n  onDeleteClick\r\n}) => {\r\n  const handleClick = () => {\r\n    onClick()\r\n  };\r\n  const handleDeleteClick = () => onDeleteClick();\r\n\r\n  const renderCheckboxIcon = () => {\r\n    if (completed) {\r\n      // Task is completed - render green checked icon\r\n      return <CheckBox style={{ color: green[500] }} fontSize={ICON_SIZE} />\r\n    }\r\n    // By default render unchecked icon\r\n    return <CheckBoxBlank fontSize={ICON_SIZE} />\r\n  }\r\n\r\n  return (\r\n    <ListItem button onClick={handleClick}>\r\n      <IconButton edge=\"start\" onClick={handleClick}>\r\n        {renderCheckboxIcon()}\r\n      </IconButton>\r\n      <ListItemText primary={text} />\r\n      <ListItemSecondaryAction>\r\n        <IconButton\r\n          edge=\"end\"\r\n          aria-label=\"delete the task\"\r\n          onClick={handleDeleteClick}\r\n        >\r\n          <Delete color=\"secondary\" fontSize={ICON_SIZE} />\r\n        </IconButton>\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  );\r\n};\r\nTaskItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  onDeleteClick: PropTypes.func.isRequired,\r\n  completed: PropTypes.bool.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TaskItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '@material-ui/core/List';\r\n\r\nimport TaskItem from './TaskItem';\r\n\r\n/**\r\n * Lists given array of tasks\r\n *\r\n * @param {Array} tasks An array with all the tasks to display\r\n * @param {Function} onTaskClick Toggles completed state (true/false)\r\n * @param {Function} onTaskDeleteClick Deletes the task\r\n */\r\nconst TaskList = ({ tasks, onTaskClick, onTaskDeleteClick }) => (\r\n  <List dense>\r\n    {tasks.map((task) => {\r\n      return (\r\n        <TaskItem\r\n          key={task.id}\r\n          {...task}\r\n          onClick={() => onTaskClick(task.id)}\r\n          onDeleteClick={() => onTaskDeleteClick(task.id)}\r\n        />\r\n      );\r\n    })}\r\n  </List>\r\n);\r\n\r\nTaskList.propTypes = {\r\n  tasks: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      completed: PropTypes.bool.isRequired,\r\n      text: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n  onTaskClick: PropTypes.func.isRequired,\r\n  onTaskDeleteClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TaskList;\r\n","import { connect } from 'react-redux';\r\n\r\nimport { VisibilityFilters } from '../actions';\r\nimport { toggleTask, removeTask } from '../actions';\r\nimport TaskList from '../components/TaskList';\r\nconst { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } = VisibilityFilters;\r\n\r\nconst getVisibleTaskList = (tasks, filter) => {\r\n  switch (filter) {\r\n    case SHOW_COMPLETED:\r\n      return tasks.filter((task) => task.completed);\r\n    case SHOW_ACTIVE:\r\n      return tasks.filter((task) => !task.completed);\r\n    case SHOW_ALL:\r\n    default:\r\n      return tasks;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tasks: getVisibleTaskList(state.tasks, state.visibilityFilter),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onTaskClick: (id) => dispatch(toggleTask(id)),\r\n    onTaskDeleteClick: (id) => dispatch(removeTask(id))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);","import React from 'react';\r\n\r\nimport { Layout } from './layout';\r\nimport AddTask from './AddTask';\r\nimport FilterList from './FilterList';\r\nimport VisibleTaskList from '../containers/VisibleTodoList';\r\n\r\n// Default icon size for the AddTask and TaskItem components\r\nexport const ICON_SIZE = 'medium';\r\n\r\nconst App = () => (\r\n  <Layout\r\n    sideMenu={<FilterList />}\r\n    contentTop={<AddTask />}\r\n    contentBottom={<VisibleTaskList />}\r\n  />\r\n);\r\n\r\nexport default App;","import React from 'react';\r\nimport './index.css';\r\nimport { render } from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport reducers from './reducers';\r\n\r\n\r\nimport App from './components/App';\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}